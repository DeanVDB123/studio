rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
   	// Helper function to check if the requesting user is an admin.
    // This requires an 'admins' collection where each document ID is a user's UID.
    //function isRequesterAdmin() {
     // return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
   // }
  
    match /memorials/{memorialId} {
      // Anyone can read a public memorial page.
      allow read: if true;

      // Users can only create memorials for themselves.
      allow create: if true; //request.auth != null ; //&& request.resource.data.userId == request.auth.uid;

      // Users can only update memorials they own, and they cannot change the owner (userId).
      allow update: if true; 
                   // && resource.data.userId == request.auth.uid
                   // && request.resource.data.userId == resource.data.userId;

      // Users can only delete memorials they own.
      allow delete: if true; //request.auth != null && resource.data.userId == request.auth.uid;
    }
    
        // Signups can only be created by the user who is signing up.
    // They cannot be read, updated, or deleted by anyone to maintain an immutable log.
    match /signups/{signupId} {
      allow read, create: if true; //request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if true;
      allow delete: if false;
    }
        // Rules for the 'admins' collection (for the helper function).
    // This collection should ONLY be managed from the Firebase Console.
    match /admins/{adminId} {
        allow read, write: if true;
    }
    
    match /feedback/{feedbackId} {
        allow read, write: if true;
    }
  }
}
